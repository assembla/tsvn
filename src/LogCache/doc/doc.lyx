#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass scrartcl
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title
\added_space_top vfill \added_space_bottom vfill 
Log Caching in TortoiseSVN
\layout Date

Date 2006-06-27
\layout Author

Stefan Fuhrmann (
\emph on 
stefan.fuhrmann@etas.de
\emph default 
)
\layout Abstract

This document describes the details of the TortoiseSVN logbook cache implementat
ion as well as its the design rationales.
\layout Section

Use Cases
\layout Standard

Subversion revision logs basically contain all repository information except
 the actual file and property contents
\begin_inset Foot
collapsed false

\layout Standard

In real life, though, logs are only fetched for a certain sub-set of the
 repository.
\end_inset 

 .
 Hence, many non-modifying operations except content diffs and full-text
 search can be performed solely on that information.
\layout Standard

The downside of this is the sheer size of that information: A few hundred
 megabytes for a large repository's log information may be manageable on
 a decent developer workstation.
 It will be far less convenient on a rather modest notebook.
\layout Standard

While not adhering to a strict (and boring) use-case description style,
 the following use-cases try to cover as many aspects of the log cache usage.
 They are neither intended to be orthogonal nor complete, though.
\layout Subsection


\begin_inset LatexCommand \label{UC:ShowLatestRevisions}

\end_inset 

Show Latest Revisions
\layout Standard

Maybe, this is the most common usage of logs: display the list of recent
 changes for a given item.
 The user's focus is on changes close to and including HEAD.
 Therefore, the cache will be of some assistance reducing the range of revisions
 to fetch but the client / server communication latency will limit the response
 time.
 
\layout Standard

It may be acceptable to many users not to fetch the delta to HEAD, if the
 cached information is recent enough.
 An option is needed to specify the maximum interval between log cache updates
 with the default being 1 hour.
 F5 should fetch the delta and update the display in any case
\begin_inset Foot
collapsed false

\layout Standard

Please note, this does apply to all log-based features including like statistics
 and revision graphs.
\end_inset 

.
\layout Standard

Another implication of this use case are small but frequent additions to
 the cache log.
 While the user expects other, large log operations to take a noticeable
 amount of time, he / she will assume that 
\begin_inset Quotes eld
\end_inset 

show latest
\begin_inset Quotes erd
\end_inset 

 requests and updates could be done in a second or even less.
\layout Standard

Of course, the caching mechanism should be able to hold the logs multiple
 repositories simultaneously.
 This is necessary to cover even a single working copy containing 
\family typewriter 
svn:externals
\family default 
 refering to other repositories.
\layout Subsection


\begin_inset LatexCommand \label{UC:DigThroughHistory}

\end_inset 

Dig Through History
\layout Standard

In contrast to UC 
\begin_inset LatexCommand \ref{UC:ShowLatestRevisions}

\end_inset 

, the user digs deeper into the log history.
 He / she may want to find the revision a certain branch was created at,
 for instance.
 Or when he made a certain change.
 So, while the previous use case is mainly about a quick information update,
 this one is about searching.
 Efficient filtering is important: If fetching 
\emph on 
all
\emph default 
 the log information is fast, filtering the same should not be major contributor
 to runtime.
\layout Standard

In all those cases, the log that is searched spans - often sparsely - over
 many revisions.
 Also, the quest may be started at some arbitrary revision far off HEAD.
\layout Subsection

Statistics
\layout Standard

Future enhancements?
\layout Subsection

Interactive Revision Graphs
\layout Standard

Up to and including versions 1.4.x of TortoiseSVN, building the revision graph
 is done in two phases both taking a considerable amount of time and consuming
 a lot of memory: Fetching the log data first and building the graph afterwards.
 
\layout Standard

With log caching in place, phase one will be virtually eliminated.
 Hence, the same rationale as in UC 
\begin_inset LatexCommand \ref{UC:DigThroughHistory}

\end_inset 

 applies: the second phase should be sped up.
 The log caching mechanism can be expected to have an efficient representation
 of just the information needed to draw a certain part of the graph.
 Therefore, phase one could be virtually eliminated while phase two will
 be implemented using an efficient query interface on the log cache.
\layout Standard

Once that is done, the user may start drawing the graph at any point in
 the repository space-time and explore it interactively.
\layout Subsection


\begin_inset LatexCommand \label{UC:ReduceRequiredBandwith}

\end_inset 

Reduce Delays and Required Bandwidth 
\layout Standard

Log caching is surely about minimizing user experienced delays.
 Those stem from two main sources: latency of the repository server and
 network round-trips for one and secondly simple networking bandwidth or
 repository server throughput limitations.
 
\layout Standard

Reductions in latency are hard to achieve: Minor optimizations to the server
 query may be possible using several heuristics
\begin_inset Foot
collapsed false

\layout Standard

For instance: get HEAD revision and be done if it did not change.
\end_inset 

.
 The most promising strategy is hiding the latency.
 In that case, the user would see the cached log information first until
 the server response is finally available.
 Please note, that such behavior may be confusing to the unsuspicious user
 because the log delta fetched from the server may contain the deletion
 of the selected item and an addition of the same.
 Hence, only part of that delta is shown in the final display.
\layout Standard

Some people's connection to their repository server may not be exactly 
\begin_inset Quotes eld
\end_inset 

snappy
\begin_inset Quotes erd
\end_inset 


\begin_inset Foot
collapsed false

\layout Standard

Not just modem users but people using connect on demand or having a satelite
 connection will experience huge initial comminication setup latencies.
\end_inset 

 making them prefer TortoiseSVN not to connect the server until explicitly
 asked.
 
\layout Standard

Large repositories will have more than a million revisions.
 The most efficient way to fill a log cache for those is by distributing
 
\begin_inset Quotes eld
\end_inset 

log tar balls
\begin_inset Quotes erd
\end_inset 

.
 An easy way to import / export someones log cache is needed.
 
\layout Standard

Fast repository access is given for workstations accessing the server within
 the LAN.
 If you do not have that LAN connection you are likely to use a notebook
 or other computer with limited RAM, CPU and harddisk resources.
 Therefore, many log caching users will need about a space efficent data
 representation that is still quickly accessible with reasonable computing
 power.
\layout Subsection

Offline Functionality
\layout Standard

Differs from UC 
\begin_inset LatexCommand \ref{UC:ReduceRequiredBandwith}

\end_inset 

 by being explicit (don't even try to connect).
 Unavailable data remains unavailable.
\layout Subsection

Refresh Log Information
\layout Standard

Comment, author, etc.
 may change.
 Update (ask server) explicitly.
\layout Subsection

Enhanced Diff Between Tags
\layout Standard

Has the file been not touched at all or just been restored to its original
 state?
\layout Subsection

Quality Assurance
\layout Standard

What paths (branches / tags) contain a certain code fragment?
\layout Subsection

Honor Access Rights
\layout Standard

Repository access restrictions.
 Share cache data yes / no.
\layout Section

System Requirements
\layout Standard

From on the use cases listed above, this section will derive requirements
 the log caching mechanism shall meet.
\the_end
